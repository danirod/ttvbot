.TH ttvbot 8

.SH NAME
ttvbot \- a bot integration for danirod's Twitch chat

.SH SYNOPSIS
.B ttvbot

.SH DESCRIPTION
The
.B ttvbot
tool is used to connect to a Twitch chat and expose a set of
integrations, services and chat replies so that it can enhance the
viewer experience of a channel and make the platform safer for the
viewers.

When
.B ttvbot
is invoked, it will spawn a chatbot that will connect to a designated
Twitch channel. Once connected, it will start listening for events
happening in the chat and reacting to them. Some of these events are:

.IP \(bu 3
Join and part events, to detect on-demand when someone enters or
leaves the chat, which is used for stuff like the antibot engine or
to detect regular viewers.
.IP \(bu 3
Incoming chat messages, which is mostly used to detect commands which
the bot may reply to, as a way to provide common answers, links to
social media or just have fun.
.IP \(bu 3
Interact with the Twitch API via Helix, for things like banning users,
changing the stream metadata (title, tags...) or changing the list
of VIP users.

.SS HTTP server
To interact with the application using an RPC system, the application
will spawn an HTTP server on boot. This HTTP server can be used to
interact with the modules and to request information from the system,
such as interact with the Twitch API via proxy.

The list of endpoints are:

.TP
\fB/health\fR
Healthcheck endpoint. Returns HTTP 200 if all the system components
are OK, and HTTP 400 if at least one of the system components is not
working properly. Also sends as body the self-report diagnostic,
where each component is able to speak by itself.

.SH ENVIRONMENT
.TP
\fBTTVBOT_USERNAME\fR
The username of the bot. This is the username of the bot account, it
is the one who interacts with the Twitch API, and it is the username
that will be seen near messages in the chat generated by the bot
itself.

.TP
\fBTTVBOT_TARGET\fR
The channel that the bot will join and monitor. This is the channel
where the bot will be monitoring for chat events, and most of the
time it will be the channel that will be used when using the Helix API
to interact with Twitch (such as the one where the title would be
changed).

.TP
\fBTTVBOT_IRC_TOKEN\fR
The IRC token used to connect to the Twitch chat using authentication.
This value has the format \fIoauth:XXX\fR, where XXX is the
authentication token.

.TP
\fBTTVBOT_ALLOWED_BOTS\fR
A comma separated list of usernames that should not be banned by the
antibot system, even if their usernames come in the Twitch bots list.
Usually bots like \fIstreamlabs,\fR \fImoobot\fR or \fIown3d\fR would
be on this list.

.TP
\fBTTVBOT_DATABASE\fR
The SQLite database used to store persistent data by the application
and some modules.

.TP
\fBTTVBOT_HTTP_BIND\fR
The host and port where the HTTP server should be mapped. For instance,
\fIlocalhost:6060\fR would bind the server to localhost and serve from
the port 6060, and \fI0.0.0.0:4000\fR will bind the server on all
interfaces and serve from the port 4000.

.SH TO-DO TASKS
.IP \(bu 3
The HTTP server has no authentication mechanism, which means that it
is very dangerous to bind this to public interfaces that are connected
to the internet.

.SH AUTHORS
.B ttvbot
is created and maintained by Dani Rodriguez.

.SH COPYRIGHT
.B ttvbot
is licensed under the terms of the zlib License. The source code is
located at <\fIhttps://git.danirod.es/danirod/ttvbot\fR> or at
<\fIhttps://github.com/danirod/ttvbot\fR> as a secondary mirror.

As with any other free software project whose code is available in
the wild, you are free to read, study and fork the source code for
your own needs, but keep in mind that I won't be accepting patches
or pull requests for this project, since it is not a collaborative
project but rather a personal toy. Thank you for your understanding.
